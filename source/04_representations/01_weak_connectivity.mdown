# Failed attempts at restricting the class of hierarchies

We have encountered a variety of hierarchies in the previous unit.
They're shown below to jog your memory.

\input_mid{./123.tikz}
\input_mid{./adjectival_gradation.tikz}
\input_mid{./blake_partialorder.tikz}
\input_mid{./pcc_hierarchy_right_reduced.tikz}

They are all weak partial orders, and some of them are linear orders.
But weak partial orders can take a lot more general shapes than what we see above.

\begin{example}
Consider the **identity function** $\mathrm{id}$, which connects every node to itself and nothing else. 
We can view this function as a relation that connects each node to itself and nothing else.
This is a weak partial order.
It clearly satisfies reflexivity.
Transitivity holds because $a \mathrel{R} b$ and $b \mathrel{R} c$ hold only if $a = b = c$, wherefore $a \mathrel{R} c$ is the same as $a \mathrel{R} a$, which is guranteed by reflexivity.
Antisymmetry holds for the same rason: $a \mathrel{R} b$ holds only if $a = b$, so it is trivially true that $a \mathrel{R} b$ and $b \mathrel{R} a$ implies $a = b$.
\end{example}

The four hierarchies above hence are all weak partial orders, but the opposite does not hold.
Not every weak partial order is a possible linguistic hierarchy.
Our task, then, is to identify a proper subclass of weak partial orders that more narrowly circumscribes the class of possible hierarchies.

## A first attempt: Lattices

All the four structures above are lattices.
Remember, a partially ordered set $S$ is a lattice iff it is both a meet semilattice and a join semilattice.
In other words, for all $x, y \in S$ it holds that there is a greatest lower bound $x \wedge y$ and a least upper bound $x \vee y$.

\begin{exercise}
Compute each one of the following for the corresponding hierarchy above (assume for each figure that if a node $x$ has a connection to some higher node $y$, this represents $x \leq y$, not $y \leq x$).

<ol>
<li>$1 \wedge 2$</li>
<li>$2 \vee (1 \wedge 3)$</li>
<li>$\text{positive} \wedge \text{comparative} \wedge \text{superlative}$</li>
<li>$\text{Nom} \wedge (\text{Gen} \vee \text{Acc})$</li>
<li>$(3,2 \vee (1,3 \wedge 2,1)) \wedge 2,3$</li>
</ol>
\end{exercise}

The class of lattices seems to be a good fit.
It even provides a good characterization for phenomena we haven't considered at all yet.

For example, there is a phenomenon that is very similar to the PCC that is known as the **Gender Case Constraint** (GCC).
Like the PCC, the GCC forbids certain combinations of pronouns in the same clause.
Unlike the PCC, the relevant pronouns are subject and objects rather than direct and indirect object.
More importantly, the GCC limits these combinations based on gender instead of person.
So far the GCC is only attested for Zapotec, which has four distinct genders.
The following combinations are allowed:

$\downarrow$S/O$\rightarrow$ | 1 | 2 | 3 | 4 |
--: | :-: | :-: | :-: | :-: |
1   | -   | Y   | Y   | Y   |
2   | N   | -   | Y   | Y   |
3   | N   | N   | -   | Y   |
4   | N   | N   | N   | -   |

This looks very similar to the U-PCC, generalized from 3 values to 4.
So it isn't too surprising that the GCC is a monotonic map given a gender hierarchy that, once again, forms a lattice.

\input_mid{./gcc_hierarchy.tikz}

\begin{exercise}
Show that the Zapotec GCC is monotonic over this hierarchy.
\end{exercise}

So it looks like we might be able to narrow down the class of potential hierarchies from any weak partial order to lattices.
That's a significant reduction.
Unfortunately, the class of lattices is too restrictive.

## Lattices are too specific: Evidence from tense

Some hierarchies do not form lattices.
One case where one can see this is with verbal tense.
Consider the English tenes paradigm **go-went-gone**.
This looks like an ABA pattern.
But suppose that we use the order $\text{past} < \text{participle} < \text{present}$.
This is intuitively plausible since past events occur before present events, whereas the participle is usually used for the simple perfect, which describes events that aren't quite as distant as those described by simple past.
With this ordering, **go-went-gone** is actually **went-gone-go**.
The $^*$ABA-violation has disappeared.
And given this ordering of verbal forms, no ABA violations are attested at all.

If this were the end of it, we could still stick with our story that all linguistic hierarchies must be lattices.
But as you all know, verbs can have more temporal forms than just those three, and one of them is the future tense.
Once one considers future, things become more complicated.

1. Future can be syncretic with past and participle to the exclusion of present. 
   An example is Serbo-Croatian *hteo sam* (past), *hteo* (participle), *hoću* (present), *hteću* (future).
   This pattern is AABA.

1. Present and future can be syncretic to the exclusion of past and participle.
   An example is the ABCC pattern *xward*, *xoria*, *xweid*, *xweid* in Kurdish.

1. Present, participle, and past can be syncretic to the exclusion of future.
   This is the case for French, where the present, past and participle of *go* all use them stem *all-*, whereas the future is built with the stem *ir-*.

The Serbo-Croatian data suggests an ordering
$\text{past} < \text{participle} < \text{future} < \text{present}$,
whereas the French pattern requires
$\text{past} < \text{participle} < \text{present} < \text{future}$.
The Kurdish data is compatible with both.
Each one of the two hierarchies is a lattice, but we need a hierarchy that can accommodate all those tense patterns at once.
No linear order can do this.
Instead, we need a partial order.

\input_mid{./tense_hierarchy.forest}

\begin{exercise}
For each one of the three data paradigms above, show that it is monotonic over this tense hierarchy.
\end{exercise}

This is not a lattice as neither $\text{future} \wedge \text{participle}$ nor $\text{future} \wedge \text{past}$ exist.
Instead, it is a (join) semilattice.
Remember that semilattices also played a major role for the Adjunct Island Constraint.
So perhaps all linguistic hierarchies that aren't lattices are at least semilattices.
That would be nifty.
Unfortunately, that's wrong again.

\begin{exercise}
Why can't we generalize the tense semilattice to a lattice by also setting $\text{past} < \text{future}$?
\end{exercise}


## Semilattices (and weak partial orders) are too specific

The counterexample to semilattices again comes from case.
However, this time it isn't about case syncretism but noun stem allomorphy.
Noun stem allomorphy refers to the facts that case may not only be reflected in the choice of suffix, but also in the form of the stem.
This is shown below for Latin *rex*, which means *king*.

| Case | Singular | Plural   | 
| --:  | :--      | :--      | 
| Nom  | rex      | reg-es   | 
| Gen  | reg-is   | reg-um   | 
| Dat  | reg-i    | reg-ibus | 
| Acc  | reg-em   | reg-es   | 
| Abl  | reg-e    | reg-ibus | 

As you can see, nominative singular uses the special form *rex* without a dedicated case suffix, whereas all other cases are built with the stem *reg* instead.
Curiously, there seem to be only two options for noun stem allomorphy.
Either all cases use the same stem, or only nominative gets to use a different stem.
So in a system with nominative, accusative, genitive, and dative, the only possible stem patterns are AAAA and ABBB.
This is monotonic over the case hierarchy, repeated here for your convenience.

\input_mid{./blake_partialorder.tikz}

But the case hierarchy allows for many other monotonic maps, none of which seem to occur with noun stem allomorphy.
Rather than stipulating them away, one would prefer a mechanism that modifies the hierarchy for case and thereby yields a suitable hierarchy for noun stem allomorphy.
The only possible solution that limits the set of monotonic maps is the following:

\input_mid{./stem_allomorphy.tikz}

This figure looks quite a bit different from what we have encountered so far.
An arrow from $x$ to $y$ represents $x \leq y$.
Arrows that can be inferred via transitivity are omitted.
So $\text{Acc} < \text{Dat}$ even though there is no arrow that directly connects the two.
Note how this hierarchy essentially creates a cycle from accusative to genitive, dative, other cases, and back to accusative.

\begin{exercise}
A monotonic mapping must map all cases in this cycle to the same value.
Explain why.
\end{exercise}

The hierarchy above allows for the two attested noun stem allmorphy patterns, and nothing else.
So it provides a very tight characterization of this phenomeon.
But the hierarchy is not a semilattice, let alone a lattice.
In fact, it isn't even a weak partial order, so it can't be a semilattice, either, as this is a special kind of partially ordered set.

In order to be a weak partial order, $\leq$ as defined by the figure must be reflexive, transitive, and antisymmetric.
We usually take reflexivity for granted.
But note that in this case, it is also implied by transitivity for most cases.
For instance, $\text{Acc} \leq \text{Gen} \leq \text{Dat} \leq \text{Others} \leq \text{Acc}$, so $\text{Acc} \leq \text{Acc}$ by transitivity.
But this example also shows that antisymmetry does not hold: both $\text{Acc} \leq \text{Gen}$ and $\text{Gen} \leq \text{Acc}$ hold, yet accusative and genitive are distinct elements of the hierarchy.
This shows that $\leq$ is reflexive and transitive, but not antisymmetric.
Consequently, $\leq$ isn't a weak partial order.
Instead, it is a **preorder** (also called a **quasi-order**).

Our quest to find a more restrictive characterization for linguistic hierarchies has turned pretty dire all of a sudden.
If some hierarchies aren't even weak partial orders, then they cannot be semilattices or lattices either.
Remember, a semilattices and lattices are special cases of partially ordered sets, i.e. sets with a weak partial order defined over them.
The class of preorders is even bigger than the class of weak partial orders.
Despite our best intentions, things have become less restrictive.
Do not despair, though.
The next notebook shows a way of out of this malaise.
It requires a shift in perspective, though, as it relies on graphs instead of orders.
